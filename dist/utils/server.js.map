{"version":3,"file":"server.js","sourceRoot":"/","sources":["utils/server.ts"],"names":[],"mappings":"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","sourcesContent":["// Express server\nimport * as express from 'express';\nimport {createServer, Server as HttpsServer} from 'https';\nimport {Server as HttpServer} from 'http';\nimport helmet from 'helmet';\nimport * as cookieParser from 'cookie-parser';\nimport * as bodyParser from 'body-parser';\nimport * as cors from 'cors';\nimport {Debug} from './debug';\n\nexport type SSLType = { key: string; cert: string };\n\nexport class Server {\n  app: express.Express;\n\n  server?: HttpsServer | HttpServer;\n  ssl?: SSLType;\n\n  constructor(\n    encryptionKey: string,\n    https: boolean = false,\n    corsOpt: boolean = true,\n    ssl?: SSLType,\n    serverAddon?: (...params: any[]) => any,\n  ) {\n    this.app = express();\n\n    if (https) this.ssl = ssl;\n\n    // Handling URI decode vulnerability\n    this.app.use(async (req, res, next) => {\n      try {\n        decodeURIComponent(req.path);\n        return next();\n      } catch (err) {\n        return res.status(400).send({\n          status: 400,\n          error: 'Bad Request',\n          details: { message: 'URIError: Failed to decode param' },\n        });\n      }\n    });\n\n    // Setting up helmet\n    this.app.use(\n      helmet({\n        frameguard: false, // Disabling frameguard so that Ltijs can send resources to iframes inside LMS's\n        contentSecurityPolicy: false,\n      }),\n    );\n\n    // Controlling cors, having in mind that resources in another domain need to be explicitly allowed, and that ltijs controls origin blocking unregistered platforms\n    // This block of code allows cors specifying the host instead of just returnin '*'. And then ltijs blocks requests from unregistered platforms. (Except for whitelisted routes)\n    if (corsOpt) {\n      this.app.use(\n        cors({\n          origin: (\n            origin: string,\n            callback: (\n              err: Error | null,\n              origin?:\n                | boolean\n                | string\n                | RegExp\n                | Array<boolean | string | RegExp>,\n            ) => void,\n          ) => {\n            callback(null, true);\n          },\n          credentials: true,\n        }),\n      );\n      this.app.options('*', cors());\n    }\n    this.app.use(bodyParser.urlencoded({ extended: false }));\n    this.app.use(bodyParser.json());\n    this.app.use(bodyParser.raw());\n    this.app.use(bodyParser.text());\n    this.app.use(cookieParser(encryptionKey));\n    this.app.use(async (req, res, next) => {\n      // Creating Authorization schema LTIK-AUTH-V1\n      if (req.headers && req.headers.authorization) {\n        const headerParts = req.headers.authorization.split(\n          'LTIK-AUTH-V1 Token=',\n        );\n        if (headerParts.length > 1) {\n          Debug.log(this, 'Validating LTIK-AUTH-V1 Authorization schema');\n          try {\n            const tokenBody = headerParts[1];\n\n            // Get ltik\n            const tokenBodyParts = tokenBody.split(',');\n            req['token'] = tokenBodyParts[0];\n\n            // Get additional Authorization headers\n            const additional = tokenBody.split('Additional=');\n            if (additional.length > 1)\n              req.headers.authorization = additional[1];\n          } catch (err) {\n            Debug.log(\n              this,\n              'Error validating LTIK-AUTH-V1 Authorization schema',\n            );\n            Debug.log(this, err);\n          }\n        }\n      }\n      return next();\n    });\n    this.app.use(async (req, res, next) => {\n      // Return if req.token is already defined\n      if (req['token']) return next();\n      // Attempt to retrieve ltik from query parameters\n      if (req.query && req.query.ltik) {\n        req['token'] = req.query.ltik;\n        return next();\n      }\n      // Attempt to retrieve ltik from body parameters\n      if (req.body && req.body.ltik) {\n        req['token'] = req.body.ltik;\n        return next();\n      }\n      // Attempt to retrieve ltik from Bearer Authorization header\n      if (req.headers.authorization) {\n        const parts = req.headers.authorization.split(' ');\n        if (parts.length === 2 && parts[0] === 'Bearer') {\n          req['token'] = parts[1];\n          return next();\n        }\n      }\n      return next();\n    });\n\n    // Executing server addon\n    if (serverAddon) serverAddon(this.app);\n  }\n\n  listen(port: number) {\n    return new Promise((resolve, reject) => {\n      if (this.ssl) {\n        this.server = createServer(this.ssl, this.app).listen(port);\n      } else {\n        this.server = this.app.listen(port);\n      }\n      this.server.on('listening', () => {\n        resolve(true);\n      });\n      this.server.on('error', (err: Error) => {\n        reject(err);\n      });\n    });\n  }\n\n  setStaticPath(path: string) {\n    this.app.use('/', express.static(path, { index: '_' }));\n  }\n\n  close() {\n    if (this.server) this.server.close();\n  }\n}\n"]}