{"version":3,"file":"main.js","sourceRoot":"/","sources":["main.ts"],"names":[],"mappings":";;AAKA,2BAuBC;AA5BD,4BAA0B;AAC1B,kDAA4D;AAI7C,KAAK,UAAU,QAAQ,CACpC,aAAqB,EACrB,eASC,EACD,OAAwB;IAExB,MAAM,QAAQ,GAAG,IAAI,mBAAW,EAAE,CAAC;IAEnC,MAAM,QAAQ,CAAC,KAAK,CAClB,aAAa,EACb,eAAoC,EACpC,OAAO,CACR,CAAC;IAEF,OAAO,QAAQ,CAAC;AAClB,CAAC","sourcesContent":["import 'reflect-metadata';\nimport {Provider as LtiProvider} from './provider/provider';\nimport {DataSourceOptions} from 'typeorm';\nimport {ProviderOptions} from './utils/types';\n\nexport default async function register(\n  encryptionKey: string,\n  databaseOptions: Omit<\n    DataSourceOptions,\n    | 'subscribers'\n    | 'migrations'\n    | 'migrationsTableName'\n    | 'migrationsTransactionMode'\n    | 'namingStrategy'\n    | 'logging'\n    | 'logger'\n  >,\n  options: ProviderOptions,\n) {\n  const provider = new LtiProvider();\n\n  await provider.setup(\n    encryptionKey,\n    databaseOptions as DataSourceOptions,\n    options,\n  );\n\n  return provider;\n}\n"]}