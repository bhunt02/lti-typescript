{"version":3,"file":"keyset.js","sourceRoot":"/","sources":["utils/keyset.ts"],"names":[],"mappings":";;;AACA,yCAAsC;AACtC,uDAAwD;AACxD,mCAAgC;AAChC,6BAA6B;AAG7B,MAAa,MAAM;IAIjB,MAAM,CAAC,KAAK,CAAC,KAAK;QAChB,aAAK,CAAC,GAAG,CAAC,IAAI,EAAE,uBAAuB,CAAC,CAAC;QACzC,MAAM,IAAI,GAAG,MAAM,mBAAQ,CAAC,IAAI,CAAC,2BAAc,CAAC,CAAC;QACjD,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC5B,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,MAAM,GAAG,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC;gBAC3B,GAAG,EAAG,GAAG,CAAC,IAA6B,CAAC,GAAG;aAC5C,CAAC,CAAC;YACH,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;YAClB,GAAG,CAAC,GAAG,GAAG,OAAO,CAAC;YAClB,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAnBD,wBAmBC","sourcesContent":["/* Handle jwk keyset generation */\nimport { Database } from './database';\nimport { PublicKeyModel } from '../entities/key.entity';\nimport { Debug } from './debug';\nimport * as Jwk from 'rasha';\nimport { KeyObject } from './types';\n\nexport class Keyset {\n  /**\n   * @description Handles the creation of jwk keyset.\n   */\n  static async build() {\n    Debug.log(this, 'Generating JWK keyset');\n    const keys = await Database.find(PublicKeyModel);\n    const keyset = { keys: [] };\n    for (const key of keys) {\n      const jwk = await Jwk.import({\n        pem: (key.data as unknown as KeyObject).key,\n      });\n      jwk.kid = key.kid;\n      jwk.alg = 'RS256';\n      jwk.use = 'sig';\n      keyset.keys.push(jwk);\n    }\n    return keyset;\n  }\n}\n"]}