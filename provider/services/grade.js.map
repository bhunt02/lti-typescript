{"version":3,"file":"grade.js","sourceRoot":"/","sources":["provider/services/grade.ts"],"names":[],"mappings":"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","sourcesContent":["/* Provider Assignment and Grade Service */\n\nimport * as parseLink from 'parse-link-header';\nimport {Debug} from '../../utils/debug';\nimport {Provider} from '../provider';\nimport {AccessTokenType, CreateLineItem, getLineItemOptions, IdToken, LineItem, ScoreType,} from '../../utils/types';\n\nexport type LinkType = { url: string };\nexport type ParsedLinkType = {\n  next?: LinkType;\n  prev?: LinkType;\n  first?: LinkType;\n  last?: LinkType;\n};\n\nexport type ResultType = {\n  next?: string;\n  prev?: string;\n  first?: string;\n  last?: string;\n  lineItems?: LineItem[];\n  scores?: ScoreType[];\n};\n\nexport class GradeService {\n  constructor(private provider: Provider) {}\n\n  private formatResult(\n    parsedLinks: ParsedLinkType,\n    lineItems?: LineItem[],\n    scores?: ScoreType[],\n  ): ResultType {\n    return {\n      next: parsedLinks?.next?.url,\n      prev: parsedLinks?.prev?.url,\n      first: parsedLinks?.first?.url,\n      last: parsedLinks?.last?.url,\n      lineItems,\n      scores,\n    };\n  }\n\n  /**\n   * @description Gets lineitems from a given platform\n   * @param {Object} idToken - Idtoken for the user\n   * @param {Object} [options] - Options object\n   * @param {Boolean} [options.resourceLinkId = false] - Filters line items based on the resourceLinkId of the resource that originated the request\n   * @param {String} [options.resourceId = false] - Filters line items based on the resourceId\n   * @param {String} [options.tag = false] - Filters line items based on the tag\n   * @param {Number} [options.limit = false] - Sets a maximum number of line items to be returned\n   * @param {String} [options.id = false] - Filters line items based on the id\n   * @param {String} [options.label = false] - Filters line items based on the label\n   * @param {String} [options.url = false] - Retrieves line items from a specific URL. Usually retrieved from the `next` link header of a previous request.\n   * @param {AccessTokenType} accessToken\n   */\n  async getLineItems(\n    idToken: IdToken,\n    options?: getLineItemOptions,\n    accessToken?: AccessTokenType,\n  ): Promise<ResultType> {\n    if (!idToken) {\n      Debug.log(this, 'Missing IdToken object.');\n      throw new Error('MISSING_ID_TOKEN');\n    }\n    Debug.log(this, 'Target platform: ' + idToken.iss);\n\n    accessToken = await this.provider.checkAccessToken(\n      idToken,\n      'https://purl.imsglobal.org/spec/lti-ags/scope/lineitem.readonly',\n      accessToken,\n    );\n    const platform = await this.provider.getPlatformById(idToken.platformId);\n\n    let response: [any, Response];\n\n    if (options && options.url) {\n      Debug.log(this, 'Requesting line items from: ' + options.url);\n      response = await platform.api.get(\n        options.url,\n        {\n          headers: {\n            Authorization:\n              accessToken.token_type + ' ' + accessToken.access_token,\n            Accept: 'application/vnd.ims.lis.v2.lineitemcontainer+json',\n          },\n        },\n        true,\n      );\n    } else {\n      let lineitemsEndpoint = idToken.platformContext.endpoint.lineitems;\n      let query = new URLSearchParams();\n      if (lineitemsEndpoint.indexOf('?') !== -1) {\n        query = new URLSearchParams(lineitemsEndpoint.split('\\?')[1]);\n        lineitemsEndpoint = lineitemsEndpoint.split('\\?')[0];\n      }\n\n      if (options) {\n        if (options.resourceLinkId)\n          query.append('resource_link_id', idToken.platformContext.resource.id);\n        if (options.limit && !options.id && !options.label)\n          query.append('limit', String(options.limit));\n        if (options.tag) query.append('tag', options.tag);\n        if (options.resourceId)\n          query.append('resource_id', String(options.resourceId));\n      }\n      Debug.log(this, 'Requesting line items from: ' + lineitemsEndpoint);\n      response = await platform.api.get(\n        `${lineitemsEndpoint}${query.size > 0 ? `?${query.toString()}` : ''}`,\n        {\n          headers: {\n            Authorization:\n              accessToken.token_type + ' ' + accessToken.access_token,\n            Accept: 'application/vnd.ims.lis.v2.lineitemcontainer+json',\n          },\n        },\n        true,\n      );\n    }\n\n    let lineItems = JSON.parse(JSON.stringify(response[0]));\n\n    // Parsing link headers\n    const parsedLinks =\n      response[1].headers?.get('link') !== undefined\n        ? parseLink(response[1].headers.get('link'))\n        : {};\n\n    // Applying special filters\n    if (options && options.id)\n      lineItems = lineItems.filter((lineitem: LineItem) => {\n        return lineitem.id === options.id;\n      });\n    if (options && options.label)\n      lineItems = lineItems.filter((lineitem: LineItem) => {\n        return lineitem.label === options.label;\n      });\n    if (\n      options &&\n      options.limit &&\n      (options.id || options.label) &&\n      options.limit < lineItems.length\n    )\n      lineItems = lineItems.slice(0, options.limit);\n\n    return this.formatResult(parsedLinks, lineItems);\n  }\n\n  /**\n   * @description Creates a new lineItem for the given context\n   * @param {IdToken} idToken - Idtoken for the user\n   * @param {LineItem} lineItem - LineItem Object, following the application/vnd.ims.lis.v2.lineitem+json specification\n   * @param {Object} [options] - Aditional configuration for the lineItem\n   * @param {Boolean} [options.resourceLinkId = false] - If set to true, binds the created lineItem to the resource that originated the request\n   * @param {AccessTokenType} accessToken\n   */\n  async createLineItem(\n    idToken: IdToken,\n    lineItem: CreateLineItem,\n    options: { resourceLinkId?: boolean } = { resourceLinkId: false },\n    accessToken?: AccessTokenType,\n  ): Promise<LineItem> {\n    // Validating lineItem\n    if (!idToken) {\n      Debug.log(this, 'Missing IdToken object.');\n      throw new Error('MISSING_ID_TOKEN');\n    }\n    if (!lineItem) {\n      Debug.log(this, 'Line item object missing.');\n      throw new Error('MISSING_LINE_ITEM');\n    }\n\n    if (options && options.resourceLinkId)\n      lineItem.resourceLinkId = idToken.platformContext.resource.id;\n\n    Debug.log(this, 'Target platform: ' + idToken.iss);\n\n    accessToken = await this.provider.checkAccessToken(\n      idToken,\n      'https://purl.imsglobal.org/spec/lti-ags/scope/lineitem',\n      accessToken,\n    );\n    const platform = await this.provider.getPlatformById(idToken.platformId);\n    const lineitemsEndpoint = idToken.platformContext.endpoint.lineitems;\n\n    Debug.log(this, 'Creating Line item: ');\n    Debug.log(this, lineItem);\n\n    const newLineItem: LineItem = await platform.api.post(lineitemsEndpoint, {\n      headers: {\n        Authorization: accessToken.token_type + ' ' + accessToken.access_token,\n        'Content-Type': 'application/vnd.ims.lis.v2.lineitem+json',\n      },\n      body: JSON.stringify(lineItem),\n    });\n\n    Debug.log(this, 'Line item successfully created');\n    return newLineItem as LineItem;\n  }\n\n  /**\n   * @description Gets LineItem by the ID\n   * @param {Object} idToken - Idtoken for the user\n   * @param {String} lineItemId - LineItem ID.\n   * @param {AccessTokenType} accessToken Optionally passed access token if already acquired\n   */\n  async getLineItemById(\n    idToken: IdToken,\n    lineItemId: string,\n    accessToken?: AccessTokenType,\n  ): Promise<LineItem> {\n    if (!idToken) {\n      Debug.log(this, 'Missing IdToken object.');\n      throw new Error('MISSING_ID_TOKEN');\n    }\n    if (!lineItemId) {\n      Debug.log(this, 'Missing lineItemID.');\n      throw new Error('MISSING_LINEITEM_ID');\n    }\n\n    Debug.log(this, 'Target platform: ' + idToken.iss);\n\n    accessToken = await this.provider.checkAccessToken(\n      idToken,\n      'https://purl.imsglobal.org/spec/lti-ags/scope/lineitem.readonly',\n      accessToken,\n    );\n    const platform = await this.provider.getPlatformById(idToken.platformId);\n\n    const lineitemUrl = lineItemId;\n    Debug.log(this, 'Retrieving: ' + lineitemUrl);\n    const response = await platform.api.get(lineitemUrl, {\n      headers: {\n        Authorization: accessToken.token_type + ' ' + accessToken.access_token,\n      },\n    });\n    Debug.log(this, 'LineItem sucessfully retrieved');\n    return response as LineItem;\n  }\n\n  /**\n   * @description Updates LineItem by the ID\n   * @param {Object} idToken - Idtoken for the user\n   * @param {String} lineItemId - LineItem ID.\n   * @param {Object} lineItem - Updated fields.\n   * @param {AccessTokenType} accessToken Optionally passed access token if already acquired\n   */\n  async updateLineItemById(\n    idToken: IdToken,\n    lineItemId: string,\n    lineItem: CreateLineItem,\n    accessToken?: AccessTokenType,\n  ) {\n    if (!idToken) {\n      Debug.log(this, 'Missing IdToken object.');\n      throw new Error('MISSING_ID_TOKEN');\n    }\n    if (!lineItemId) {\n      Debug.log(this, 'Missing lineItemID.');\n      throw new Error('MISSING_LINEITEM_ID');\n    }\n    if (!lineItem) {\n      Debug.log(this, 'Missing lineItem object.');\n      throw new Error('MISSING_LINE_ITEM');\n    }\n\n    Debug.log(this, 'Target platform: ' + idToken.iss);\n\n    accessToken = await this.provider.checkAccessToken(\n      idToken,\n      'https://purl.imsglobal.org/spec/lti-ags/scope/lineitem',\n      accessToken,\n    );\n    const platform = await this.provider.getPlatformById(idToken.platformId);\n\n    const lineitemUrl = lineItemId;\n    Debug.log(this, 'Updating: ' + lineitemUrl);\n    const response = await platform.api.put(lineitemUrl, {\n      body: JSON.stringify(lineItem),\n      headers: {\n        Authorization: accessToken.token_type + ' ' + accessToken.access_token,\n        'Content-Type': 'application/vnd.ims.lis.v2.lineitem+json',\n      },\n    });\n    Debug.log(this, 'LineItem sucessfully updated');\n    return response as LineItem;\n  }\n\n  /**\n   * @description Deletes LineItem by the ID\n   * @param {Object} idToken - Idtoken for the user\n   * @param {String} lineItemId - LineItem ID.\n   * @param {AccessTokenType} accessToken Optionally passed access token if already acquired\n   */\n  async deleteLineItemById(\n    idToken: IdToken,\n    lineItemId: string,\n    accessToken?: AccessTokenType,\n  ) {\n    if (!idToken) {\n      Debug.log(this, 'Missing IdToken object.');\n      throw new Error('MISSING_ID_TOKEN');\n    }\n    if (!lineItemId) {\n      Debug.log(this, 'Missing lineItemID.');\n      throw new Error('MISSING_LINEITEM_ID');\n    }\n\n    Debug.log(this, 'Target platform: ' + idToken.iss);\n\n    accessToken = await this.provider.checkAccessToken(\n      idToken,\n      'https://purl.imsglobal.org/spec/lti-ags/scope/lineitem',\n      accessToken,\n    );\n    const platform = await this.provider.getPlatformById(idToken.platformId);\n\n    const lineitemUrl = lineItemId;\n    Debug.log(this, 'Deleting: ' + lineitemUrl);\n    await platform.api.delete(lineitemUrl, {\n      headers: {\n        Authorization: accessToken.token_type + ' ' + accessToken.access_token,\n      },\n    });\n    Debug.log(this, 'LineItem sucessfully deleted');\n    return true;\n  }\n\n  /**\n   * @description Publishes a score or grade to a lineItem. Represents the Score Publish service described in the lti 1.3 specification.\n   * @param {IdToken} idToken - Idtoken for the user.\n   * @param {String} lineItemId - LineItem ID.\n   * @param {Omit<ScoreType,'timestamp'>} score - Score/Grade following the LTI Standard application/vnd.ims.lis.v1.score+json.\n   * @param {AccessTokenType} accessToken Optionally passed access token if already acquired\n   */\n  async submitScore(\n    idToken: IdToken,\n    lineItemId: string,\n    score: Omit<ScoreType,'timestamp'>,\n    accessToken?: AccessTokenType,\n  ): Promise<ScoreType> {\n    if (!idToken) {\n      Debug.log(this, 'Missing IdToken object.');\n      throw new Error('MISSING_ID_TOKEN');\n    }\n    if (!lineItemId) {\n      Debug.log(this, 'Missing lineItemID.');\n      throw new Error('MISSING_LINEITEM_ID');\n    }\n    if (!score) {\n      Debug.log(this, 'Score object missing.');\n      throw new Error('MISSING_SCORE');\n    }\n    Debug.log(this, 'Target platform: ' + idToken.iss);\n\n    let newScore: ScoreType = {\n      ...score,\n      timestamp: new Date(Date.now()).toISOString(),\n    };\n    const shouldFetchScoreMaximum =\n      newScore.scoreGiven !== undefined && newScore.scoreMaximum === undefined;\n    const scopes = ['https://purl.imsglobal.org/spec/lti-ags/scope/score'];\n    if (shouldFetchScoreMaximum) {\n      scopes.push('https://purl.imsglobal.org/spec/lti-ags/scope/lineitem');\n    }\n\n    Debug.log(\n      this,\n      'Attempting to retrieve platform access_token for [' + idToken.iss + ']',\n    );\n    accessToken = await this.provider.checkAccessToken(\n      idToken,\n      scopes.join(' '),\n      accessToken,\n    );\n    Debug.log(this, 'Access_token retrieved for [' + idToken.iss + ']');\n\n    const platform = await this.provider.getPlatformById(idToken.platformId);\n\n    // Creating scores URL\n    const lineitemUrl = lineItemId;\n    let scoreUrl = lineitemUrl + '/scores';\n    if (lineitemUrl.indexOf('?') !== -1) {\n      const query = lineitemUrl.split('\\?')[1];\n      const url = lineitemUrl.split('\\?')[0];\n      scoreUrl = url + '/scores?' + query;\n    }\n\n    // Creating scoreMaximum if it is not present and scoreGiven exists\n    if (shouldFetchScoreMaximum) {\n      const lineItem = await this.getLineItemById(\n        idToken,\n        lineItemId,\n        accessToken,\n      );\n      newScore.scoreMaximum = lineItem.scoreMaximum;\n    }\n\n    // If no user is specified, sends the score to the user that originated request\n    if (newScore.userId === undefined) {\n      newScore.userId = idToken.user;\n    }\n\n    Debug.log(this, 'Sending score to: ' + scoreUrl);\n    Debug.log(this, newScore);\n\n    await platform.api.post(scoreUrl, {\n      headers: {\n        Authorization: accessToken.token_type + ' ' + accessToken.access_token,\n        'Content-Type': 'application/vnd.ims.lis.v1.score+json',\n      },\n      body: JSON.stringify(newScore),\n    });\n    Debug.log(this, 'Score successfully sent');\n    return newScore;\n  }\n\n  /**\n   * @description Retrieves scores from a lineItem. Represents the Result service described in the lti 1.3 specification.\n   * @param {IdToken} idToken - Idtoken for the user.\n   * @param {String} lineItemId - LineItem ID.\n   * @param {Object} [options] - Options object.\n   * @param {String} [options.userId = false] - Filters based on the userId.\n   * @param {Number} [options.limit = false] - Sets a maximum number of scores to be returned.\n   * @param {String} [options.url = false] - Retrieves scores from a specific URL. Usually retrieved from the `next` link header of a previous request.\n   * @param {AccessTokenType} accessToken Optionally passed access token if already acquired\n   */\n  async getScores(\n    idToken: IdToken,\n    lineItemId: string,\n    options: {\n      userId: string | false;\n      limit: number | false;\n      url: string | false;\n    } = { userId: false, limit: false, url: false },\n    accessToken?: AccessTokenType,\n  ): Promise<ResultType> {\n    if (!idToken) {\n      Debug.log(this, 'Missing IdToken object.');\n      throw new Error('MISSING_ID_TOKEN');\n    }\n    if (!lineItemId) {\n      Debug.log(this, 'Missing lineItemID.');\n      throw new Error('MISSING_LINEITEM_ID');\n    }\n\n    Debug.log(this, 'Target platform: ' + idToken.iss);\n\n    accessToken = await this.provider.checkAccessToken(\n      idToken,\n      [\n        'https://purl.imsglobal.org/spec/lti-ags/scope/lineitem.readonly',\n        'https://purl.imsglobal.org/spec/lti-ags/scope/result.readonly',\n      ].join(' '),\n      accessToken,\n    );\n    const platform = await this.provider.getPlatformById(idToken.platformId);\n\n    let response: [any, Response];\n    if (options && options.url) {\n      Debug.log(this, 'Requesting scores from: ' + options.url);\n      response = await platform.api.get(\n        options.url,\n        {\n          headers: {\n            Authorization:\n              accessToken.token_type + ' ' + accessToken.access_token,\n            Accept: 'application/vnd.ims.lis.v2.resultcontainer+json',\n          },\n        },\n        true,\n      );\n    } else {\n      // Creating results URL\n      const lineitemUrl = lineItemId;\n      let query = new URLSearchParams();\n      let resultsUrl = lineitemUrl + '/results';\n      if (lineitemUrl.indexOf('?') !== -1) {\n        query = new URLSearchParams(lineitemUrl.split('\\?')[1]);\n        const url = lineitemUrl.split('\\?')[0];\n        resultsUrl = url + '/results';\n      }\n\n      if (options) {\n        if (options.userId) query.append('user_id', options.userId);\n        if (options.limit) query.append('limit', String(options.limit));\n      }\n      Debug.log(this, 'Requesting scores from: ' + resultsUrl);\n      response = await platform.api.get(\n        `${resultsUrl}${query.size > 0 ? `?${query.toString()}` : ''}`,\n        {\n          headers: {\n            Authorization:\n              accessToken.token_type + ' ' + accessToken.access_token,\n            Accept: 'application/vnd.ims.lis.v2.resultcontainer+json',\n          },\n        },\n        true,\n      );\n    }\n\n    // Parsing link headers\n    const parsedLinks =\n      response[1].headers?.get('link') !== undefined\n        ? parseLink(response[1].headers.get('link'))\n        : {};\n\n    return this.formatResult(\n      parsedLinks,\n      undefined,\n      JSON.parse(JSON.stringify(response[0])),\n    );\n  }\n}\n"]}