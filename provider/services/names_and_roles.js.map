{"version":3,"file":"names_and_roles.js","sourceRoot":"/","sources":["provider/services/names_and_roles.ts"],"names":[],"mappings":"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","sourcesContent":["/* Names and Roles Provisioning Service */\n\nimport * as parseLink from 'parse-link-header';\nimport {Debug} from '../../utils/debug';\nimport {Provider} from '../provider';\nimport {IdToken} from '../../utils/types';\n\ntype MemberReturnType = {\n  differences: string;\n  next: string;\n  members: any[];\n};\n\nexport class NamesAndRolesService {\n  constructor(private provider: Provider) {}\n\n  /**\n   * @description Retrieves members from platform.\n   * @param {Object} idToken - Idtoken for the user.\n   * @param {Object} options - Request options.\n   * @param {String} [options.role] - Filters based on the User role.\n   * @param {Number} [options.limit] - Sets a maximum number of memberships to be returned per page.\n   * @param {Number} [options.pages = 1] - Sets a maximum number of pages to be returned. Defaults to 1. If set to undefined retrieves every available page.\n   * @param {String} [options.url] - Retrieve memberships from a specific URL. Usually retrieved from the `next` link header of a previous request.\n   * @param {Boolean} [options.resourceLinkId = false] - If set to true, retrieves resource Link level memberships.\n   */\n  async getMembers(\n    idToken: IdToken,\n    options: {\n      role?: string;\n      limit?: number;\n      pages?: number;\n      url?: string;\n      resourceLinkId?: boolean;\n    } = { pages: 1, resourceLinkId: false },\n  ): Promise<MemberReturnType> {\n    if (!idToken) {\n      Debug.log(this, 'Missing IdToken object.');\n      throw new Error('MISSING_ID_TOKEN');\n    }\n    Debug.log(this, 'Attempting to retrieve memberships');\n    Debug.log(this, 'Target platform: ' + idToken.iss);\n\n    const accessToken = await this.provider.checkAccessToken(\n      idToken,\n      'https://purl.imsglobal.org/spec/lti-nrps/scope/contextmembership.readonly',\n    );\n    const platform = await this.provider.getPlatformById(idToken.platformId);\n\n    let pages = 1; // Page limit\n    let query = new URLSearchParams();\n\n    let next = idToken.platformContext.namesRoles.context_memberships_url;\n    if (options) {\n      if (options.pages !== undefined) {\n        Debug.log(this, 'Maximum number of pages retrieved: ' + options.pages);\n        pages = options.pages;\n      }\n      if (options.url) {\n        next = options.url;\n        query = undefined;\n      } else {\n        if (options.role) {\n          Debug.log(this, 'Adding role parameter with value: ' + options.role);\n          query.append('role', options.role);\n        }\n        if (options.limit) {\n          Debug.log(\n            this,\n            'Adding limit parameter with value: ' + options.limit,\n          );\n          query.append('limit', String(options.limit));\n        }\n        if (options.resourceLinkId) {\n          Debug.log(\n            this,\n            'Adding rlid parameter with value: ' +\n              idToken.platformContext.resource.id,\n          );\n          query.append('rlid', idToken.platformContext.resource.id);\n        }\n      }\n    }\n\n    let differences: string;\n    let result: MemberReturnType;\n    let curPage = 1;\n\n    do {\n      if (pages && curPage > pages) {\n        if (next) result.next = next;\n        break;\n      }\n      let response: [any, Response];\n      Debug.log(this, 'Member pages found: ', curPage);\n      Debug.log(this, 'Current member page: ', next);\n\n      if (query && curPage === 1) {\n        response = await platform.api.get(\n          `${next}${query.size > 0 ? `?${query.toString()}` : ''}`,\n          {\n            headers: {\n              Authorization:\n                accessToken.token_type + ' ' + accessToken.access_token,\n              Accept:\n                'application/vnd.ims.lti-nrps.v2.membershipcontainer+json',\n            },\n          },\n          true,\n        );\n      } else {\n        response = await platform.api.get(\n          next,\n          {\n            headers: {\n              Authorization:\n                accessToken.token_type + ' ' + accessToken.access_token,\n              Accept:\n                'application/vnd.ims.lti-nrps.v2.membershipcontainer+json',\n            },\n          },\n          true,\n        );\n      }\n\n      const body = response[0]\n        ? JSON.parse(JSON.stringify(response[0]))\n        : undefined;\n\n      if (body) {\n        if (!result) {\n          result = body;\n        } else {\n          result.members = [...result.members, ...body?.members];\n        }\n      }\n\n      const parsedLinks = response[1].headers?.get('link')\n        ? parseLink(response[1].headers.get('link'))\n        : undefined;\n      // Trying to find \"rel=differences\" header\n      if (parsedLinks && parsedLinks.differences) {\n        differences = parsedLinks.differences.url;\n      }\n      // Trying to find \"rel=next\" header, indicating additional pages\n      if (parsedLinks && parsedLinks.next) {\n        next = parsedLinks.next.url;\n      } else {\n        next = undefined;\n      }\n      curPage++;\n    } while (next);\n\n    if (differences) result.differences = differences;\n    Debug.log(this, 'Memberships retrieved');\n    return result;\n  }\n}\n"]}